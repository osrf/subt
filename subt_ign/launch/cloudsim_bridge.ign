<?xml version="1.0"?>
<!-- This launch file is used by CloudSim to start a ROS master, and handle
     bridging of data to/from Ignition Gazebo to a competitor's docker image.
     It is possible, and safe, to run this launch file locally during testing
     development.

     For more information, please refer to
         https://github.com/osrf/subt/wiki/Cloudsim

    Usage: ign launch cloudsim_bridge.ign
            [worldName:=<worldName>
             robotNameX:=<robotName> robotConfigX:=<robotConfig>
             marsupial:=true
             ... ]

    The [worldName] command line argument is optional,
          defaults to tunnel_circuit_practice_01 if not specified
    The [robotNameX] command line argument is required, where X can be 1 to 20

    Note that each robot requires its own bridge, that is, only one pair of
    robotNameX and robotConfigX arguments can be passed. So if two robots named
    X1 and X2 have been spawned, cloudsim_bridge.ign must be launched two
    times.

    Example that loads tunnel circuit practice world with an X2 robot with configuration 3

      ign launch tunnel_circuit_practice.ign worldName:=tunnel_circuit_practice_01
          robotName1:=X2_3 robotConfig1:=X2_SENSOR_CONFIG_3

    If [marsupial] set set to true, this robot will be a marsupial child robot
-->

<%
  # Library of functions for worlds
  require File.dirname(__FILE__) + "/world_common_defs.rb"

  # Library for spawning the builtin robots
  require File.dirname(__FILE__) + "/robot_spawners.rb"
%>

<%
  # When 'enableGroundTruth = true' absolute poses of vehicles will be published.
  # This is useful for debugging purposes, but will not be available during
  # competition scoring.

  # Check if enableGroundTruith is not defined or is empty/nil
  if !defined?(enableGroundTruth) || enableGroundTruth == nil || enableGroundTruth.empty?
    $enableGroundTruth = false
  else
    $enableGroundTruth = enableGroundTruth
  end
%>

<%
  # Check if worldName is not defined or is empty/nil
  if !defined?(worldName) || worldName == nil || worldName.empty?
    $worldName = 'tunnel_circuit_practice_01'
  else
    $worldName = worldName
  end

  world = World.new($worldName)
%>

<%
  # there should only be one robot in this script, but unless requiring marsupials, it supports more
  robots = parseRobotArgs(binding)
%>

<ignition version='1.0'>
  <!-- Start ROS first. This is a bit hacky for now. -->
  <!-- Make sure to source /opt/ros/melodic/setup.bash -->
  <executable name='ros'>
    <command>roslaunch subt_ros competition_init.launch world_name:=<%=$worldName%> enable_ground_truth:=<%=($enableGroundTruth)?"1":"0"%> robot_names:=<%= robots.values.map{|r| r.name}.join(",") %></command>
  </executable>

<%
  teamBaseSpawned = false

  robots.each_value do |robot|

    _, executables = spawnRobot(robot, world)

    if robot.config.upcase == "TEAMBASE"
      if !teamBaseSpawned
        teamBaseSpawned = true
      else
        next
      end
    end
%>
    <%= executables %>
<%
    if defined?(marsupial) and marsupial.downcase.strip == 'true'
%>
      <executable name="<%=robot.name%>_marsupial">
        <command>roslaunch --wait subt_ros marsupial_topics.launch name:=<%=robot.name%></command>
      </executable>
<%
    end
  end
%>

</ignition>
