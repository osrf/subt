<?xml version="1.0"?>
<launch>
  <env name="IGN_TRANSPORT_TOPIC_STATISTICS" value="1"/>
  <arg name="world_name"/>
  <arg name="name"/>
  <arg name="model_prefix" value="/world/$(arg world_name)/model/$(arg name)"/>
  <arg name="lidar_prefix" value="$(arg model_prefix)/link/encoder_rotating_link"/>
  <arg name="imu_prefix" value="$(arg model_prefix)/link/nav_imu"/>
  <arg name="breadcrumbs" default="0"/>
  <group ns="$(arg name)">

    <!-- LIDAR -->
    <node
        pkg="ros_ign_bridge"
        type="parameter_bridge"
        name="ros_ign_bridge_gpu_lidar"
        args="$(arg lidar_prefix)/sensor/gpu_lidar/scan/points@sensor_msgs/PointCloud2[ignition.msgs.PointCloudPacked">
      <remap from="$(arg lidar_prefix)/sensor/gpu_lidar/scan/points" to="points"/>
    </node>

    <!-- IMU -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_imu"
      args="$(arg imu_prefix)/sensor/imu/imu@sensor_msgs/Imu[ignition.msgs.IMU">
      <remap from="$(arg imu_prefix)/sensor/imu/imu" to="imu/data"/>
    </node>

    <!-- Front Camera -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_front_camera"
      args="$(arg imu_prefix)/sensor/camera_front/camera_info@sensor_msgs/CameraInfo[ignition.msgs.CameraInfo">
      <remap from="$(arg imu_prefix)/sensor/camera_front/camera_info" to="front/camera_info"/>
    </node>
    <node
      pkg="ros_ign_image"
      type="image_bridge"
      name="ros_ign_image_front_camera"
      args="$(arg imu_prefix)/sensor/camera_front/image">
      <remap from="$(arg imu_prefix)/sensor/camera_front/image" to="front/image_raw"/>
    </node>
    <node
      pkg="subt_ros"
      type="optical_frame_publisher"
      name="front_optical_frame_publisher">
      <remap from="input/image" to="front/image_raw" />
      <remap from="output/image" to="front/optical/image_raw" />
      <remap from="input/camera_info" to="front/camera_info" />
      <remap from="output/camera_info" to="front/optical/camera_info" />
    </node>

    <!-- Left Camera -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_left_camera"
      args="$(arg imu_prefix)/sensor/camera_left/camera_info@sensor_msgs/CameraInfo[ignition.msgs.CameraInfo">
      <remap from="$(arg imu_prefix)/sensor/camera_left/camera_info" to="left/camera_info"/>
    </node>
    <node
      pkg="ros_ign_image"
      type="image_bridge"
      name="ros_ign_image_left_camera"
      args="$(arg imu_prefix)/sensor/camera_left/image">
      <remap from="$(arg imu_prefix)/sensor/camera_left/image" to="left/image_raw"/>
    </node>
    <node
      pkg="subt_ros"
      type="optical_frame_publisher"
      name="left_optical_frame_publisher">
      <remap from="input/image" to="left/image_raw" />
      <remap from="output/image" to="left/optical/image_raw" />
      <remap from="input/camera_info" to="left/camera_info" />
      <remap from="output/camera_info" to="left/optical/camera_info" />
    </node>

    <!-- Rear Camera -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_rear_camera"
      args="$(arg imu_prefix)/sensor/camera_rear/camera_info@sensor_msgs/CameraInfo[ignition.msgs.CameraInfo">
      <remap from="$(arg imu_prefix)/sensor/camera_rear/camera_info" to="rear/camera_info"/>
    </node>
    <node
      pkg="ros_ign_image"
      type="image_bridge"
      name="ros_ign_image_rear_camera"
      args="$(arg imu_prefix)/sensor/camera_rear/image">
      <remap from="$(arg imu_prefix)/sensor/camera_rear/image" to="rear/image_raw"/>
    </node>
    <node
      pkg="subt_ros"
      type="optical_frame_publisher"
      name="rear_optical_frame_publisher">
      <remap from="input/image" to="rear/image_raw" />
      <remap from="output/image" to="rear/optical/image_raw" />
      <remap from="input/camera_info" to="rear/camera_info" />
      <remap from="output/camera_info" to="rear/optical/camera_info" />
    </node>

    <!-- Right Camera -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_right_camera"
      args="$(arg imu_prefix)/sensor/camera_right/camera_info@sensor_msgs/CameraInfo[ignition.msgs.CameraInfo">
      <remap from="$(arg imu_prefix)/sensor/camera_right/camera_info" to="right/camera_info"/>
    </node>
    <node
      pkg="ros_ign_image"
      type="image_bridge"
      name="ros_ign_image_right_camera"
      args="$(arg imu_prefix)/sensor/camera_right/image">
      <remap from="$(arg imu_prefix)/sensor/camera_right/image" to="right/image_raw"/>
    </node>
    <node
      pkg="subt_ros"
      type="optical_frame_publisher"
      name="right_optical_frame_publisher">
      <remap from="input/image" to="right/image_raw" />
      <remap from="output/image" to="right/optical/image_raw" />
      <remap from="input/camera_info" to="right/camera_info" />
      <remap from="output/camera_info" to="right/optical/camera_info" />
    </node>

    <!-- POSE -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_pose"
      args="/model/$(arg name)/pose@tf2_msgs/TFMessage[ignition.msgs.Pose_V">
      <remap from="/model/$(arg name)/pose" to="pose"/>
    </node>
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_pose_static"
      args="/model/$(arg name)/pose_static@tf2_msgs/TFMessage[ignition.msgs.Pose_V">
      <remap from="/model/$(arg name)/pose_static" to="pose_static"/>
    </node>

    <!-- VELOCITY COMMAND -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_twist"
      args="/model/$(arg name)/cmd_vel_relay@geometry_msgs/Twist]ignition.msgs.Twist">
      <remap from="/model/$(arg name)/cmd_vel_relay" to="cmd_vel"/>
    </node>

    <!-- LIDAR GIMBAL COMMAND -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_joint"
      args="/model/$(arg name)/joint/lidar_gimbal/cmd_vel@std_msgs/Float64]ignition.msgs.Double">
      <remap from="/model/$(arg name)/joint/lidar_gimbal/cmd_vel" to="lidar_gimbal/pan_rate_cmd_double"/>
    </node>

    <!-- JOINT STATES -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_brdige_joint_states"
      args="$(arg model_prefix)/joint_state@sensor_msgs/JointState[ignition.msgs.Model">
      <remap from="$(arg model_prefix)/joint_state" to="joint_state"/>
    </node>

    <!-- ODOMETRY -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_odom"
      args="/model/$(arg name)/odometry@nav_msgs/Odometry[ignition.msgs.Odometry">
      <remap from="/model/$(arg name)/odometry" to="odom"/>
    </node>

    <!-- BATTERY -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_battery_state"
      args="/model/$(arg name)/battery/linear_battery/state@sensor_msgs/BatteryState[ignition.msgs.BatteryState">
      <remap from="/model/$(arg name)/battery/linear_battery/state" to="battery_state"/>
    </node>

    <!-- BREADCRUMBS -->
    <group if="$(arg breadcrumbs)">
      <node
        pkg="ros_ign_bridge"
        type="parameter_bridge"
        name="ros_ign_bridge_breadcrumbs"
        args="/model/$(arg name)/breadcrumb/deploy@std_msgs/Empty]ignition.msgs.Empty">
        <remap from="/model/$(arg name)/breadcrumb/deploy" to="breadcrumb/deploy"/>
      </node>
    </group>

    <!-- Gas sensor -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_gas"
      args="/model/$(arg name)/gas_detected@std_msgs/Bool[ignition.msgs.Boolean">
      <remap from="/model/$(arg name)/gas_detected" to="gas_detected"/>
    </node>

    <node
      pkg="subt_ros"
      type="pose_tf_broadcaster"
      name="pose_tf_broadcaster"/>

  </group>
</launch>
