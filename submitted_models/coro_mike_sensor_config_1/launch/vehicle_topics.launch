<?xml version="1.0"?>
<launch>
  <arg name="world_name"/>
  <arg name="name"/>
  <arg name="link_name" value="base_link"/>
  <arg name="sensor_prefix" value="/world/$(arg world_name)/model/$(arg name)/link/$(arg link_name)/sensor"/>
  <arg name="breadcrumbs" default="0"/>
  <group ns="$(arg name)">
    <!--Create multipe bridges so that it can run in parallel-->

    <!-- Compass with IMU -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_imu"
      args="$(arg sensor_prefix)/imu_sensor/imu@sensor_msgs/Imu[ignition.msgs.IMU">
      <remap from="$(arg sensor_prefix)/imu_sensor/imu" to="imu/data"/>
    </node>
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_magnetometer"
      args="$(arg sensor_prefix)/magnetometer/magnetometer@sensor_msgs/MagneticField[ignition.msgs.Magnetometer">
      <remap from="$(arg sensor_prefix)/magnetometer/magnetometer" to="magnetic_field"/>
    </node>

    <!-- Altimeter -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_fluid_pressure"
      args="$(arg sensor_prefix)/air_pressure/air_pressure@sensor_msgs/FluidPressure[ignition.msgs.FluidPressure">
      <remap from="$(arg sensor_prefix)/air_pressure/air_pressure" to="air_pressure"/>
    </node>

    <!-- Gas sensor -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_gas"
      args="/model/$(arg name)/gas_detected@std_msgs/Bool[ignition.msgs.Boolean">
      <remap from="/model/$(arg name)/gas_detected" to="gas_detected"/>
    </node>

    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_pose"
      args="/model/$(arg name)/pose@tf2_msgs/TFMessage[ignition.msgs.Pose_V">
      <remap from="/model/$(arg name)/pose" to="pose"/>
    </node>
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_pose_static"
      args="/model/$(arg name)/pose_static@tf2_msgs/TFMessage[ignition.msgs.Pose_V">
      <remap from="/model/$(arg name)/pose_static" to="pose_static"/>
    </node>

    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_twist"
      args="/model/$(arg name)/cmd_vel_relay@geometry_msgs/Twist]ignition.msgs.Twist">
      <remap from="/model/$(arg name)/cmd_vel_relay" to="cmd_vel"/>
    </node>

    <!-- Front RGBD -->
    <group ns="rgbd_front">
      <node
        pkg="ros_ign_bridge"
        type="parameter_bridge"
        name="ros_ign_bridge_camera"
        args="$(arg sensor_prefix)/rgbd_front/camera_info@sensor_msgs/CameraInfo[ignition.msgs.CameraInfo">
        <remap from="$(arg sensor_prefix)/rgbd_front/camera_info" to="camera_info"/>
      </node>
      <node
        pkg="ros_ign_image"
        type="image_bridge"
        name="ros_ign_image_camera"
        args="$(arg sensor_prefix)/rgbd_front/image">
        <remap from="$(arg sensor_prefix)/rgbd_front/image" to="image_raw"/>
      </node>
      <node
        pkg="ros_ign_bridge"
        type="parameter_bridge"
        name="ros_ign_bridge_rgbd"
        args="$(arg sensor_prefix)/rgbd_front/points@sensor_msgs/PointCloud2[ignition.msgs.PointCloudPacked">
        <remap from="$(arg sensor_prefix)/rgbd_front/points" to="points"/>
      </node>
      <node
        pkg="ros_ign_bridge"
        type="parameter_bridge"
        name="ros_ign_bridge_depth_info"
        args="$(arg sensor_prefix)/rgbd_front/camera_info@sensor_msgs/CameraInfo[ignition.msgs.CameraInfo">
        <remap from="$(arg sensor_prefix)/rgbd_front/camera_info" to="depth/camera_info"/>
      </node>
      <node
        pkg="ros_ign_image"
        type="image_bridge"
        name="ros_ign_image_depth"
        args="$(arg sensor_prefix)/rgbd_front/depth_image">
        <remap from="$(arg sensor_prefix)/rgbd_front/depth_image" to="depth/image_raw"/>
      </node>
      <node
        pkg="subt_ros"
        type="optical_frame_publisher"
        name="optical_frame_publisher_rgbd_image_front">
        <remap from="input/image" to="image_raw" />
        <remap from="output/image" to="optical/image_raw" />
        <remap from="input/camera_info" to="camera_info" />
        <remap from="output/camera_info" to="optical/camera_info" />
      </node>
      <node
        pkg="subt_ros"
        type="optical_frame_publisher"
        name="optical_frame_publisher_rgbd_depth_front">
        <remap from="input/image" to="depth/image_raw" />
        <remap from="output/image" to="optical/depth/image_raw" />
        <remap from="input/camera_info" to="depth/camera_info" />
        <remap from="output/camera_info" to="optical/depth/camera_info" />
      </node>
      <include file="$(find subt_ros)/launch/models_common/set_rate_relay.launch">
        <arg name="name" value="ros_ign_bridge_camera_set_rate" />
        <arg name="ign_service" value="$(arg sensor_prefix)/rgbd_front/set_rate" />
        <arg name="ros_service" value="set_rate" />
      </include>
    </group>


    <!-- Front monocular camera -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_camera_front"
      args="$(arg sensor_prefix)/camera_front/camera_info@sensor_msgs/CameraInfo[ignition.msgs.CameraInfo">
      <remap from="$(arg sensor_prefix)/camera_front/camera_info" to="camera_front/camera_info"/>
    </node>
    <node
      pkg="ros_ign_image"
      type="image_bridge"
      name="ros_ign_image_camera_front"
      args="$(arg sensor_prefix)/camera_front/image">
      <remap from="$(arg sensor_prefix)/camera_front/image" to="camera_front/image_raw"/>
    </node>
    <node
      pkg="subt_ros"
      type="optical_frame_publisher"
      name="optical_frame_publisher_front">
      <remap from="input/image" to="camera_front/image_raw" />
      <remap from="output/image" to="camera_front/optical/image_raw" />
      <remap from="input/camera_info" to="camera_front/camera_info" />
      <remap from="output/camera_info" to="camera_front/optical/camera_info" />
    </node>


    <!-- Rear monocular camera -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_camera_rear"
      args="$(arg sensor_prefix)/camera_rear/camera_info@sensor_msgs/CameraInfo[ignition.msgs.CameraInfo">
      <remap from="$(arg sensor_prefix)/camera_rear/camera_info" to="camera_rear/camera_info"/>
    </node>
    <node
      pkg="ros_ign_image"
      type="image_bridge"
      name="ros_ign_image_camera_rear"
      args="$(arg sensor_prefix)/camera_rear/image">
      <remap from="$(arg sensor_prefix)/camera_rear/image" to="camera_rear/image_raw"/>
    </node>
    <node
      pkg="subt_ros"
      type="optical_frame_publisher"
      name="optical_frame_publisher_rear">
      <remap from="input/image" to="camera_rear/image_raw" />
      <remap from="output/image" to="camera_rear/optical/image_raw" />
      <remap from="input/camera_info" to="camera_rear/camera_info" />
      <remap from="output/camera_info" to="camera_rear/optical/camera_info" />
    </node>


    <!-- Left monocular camera -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_camera_left"
      args="$(arg sensor_prefix)/camera_left/camera_info@sensor_msgs/CameraInfo[ignition.msgs.CameraInfo">
      <remap from="$(arg sensor_prefix)/camera_left/camera_info" to="camera_left/camera_info"/>
    </node>
    <node
      pkg="ros_ign_image"
      type="image_bridge"
      name="ros_ign_image_camera_left"
      args="$(arg sensor_prefix)/camera_left/image">
      <remap from="$(arg sensor_prefix)/camera_left/image" to="camera_left/image_raw"/>
    </node>
    <node
      pkg="subt_ros"
      type="optical_frame_publisher"
      name="optical_frame_publisher_left">
      <remap from="input/image" to="camera_left/image_raw" />
      <remap from="output/image" to="camera_left/optical/image_raw" />
      <remap from="input/camera_info" to="camera_left/camera_info" />
      <remap from="output/camera_info" to="camera_left/optical/camera_info" />
    </node>

    <!-- Right monocular camera -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_camera_right"
      args="$(arg sensor_prefix)/camera_right/camera_info@sensor_msgs/CameraInfo[ignition.msgs.CameraInfo">
      <remap from="$(arg sensor_prefix)/camera_right/camera_info" to="camera_right/camera_info"/>
    </node>
    <node
      pkg="ros_ign_image"
      type="image_bridge"
      name="ros_ign_image_camera_right"
      args="$(arg sensor_prefix)/camera_right/image">
      <remap from="$(arg sensor_prefix)/camera_right/image" to="camera_right/image_raw"/>
    </node>
    <node
      pkg="subt_ros"
      type="optical_frame_publisher"
      name="optical_frame_publisher_right">
      <remap from="input/image" to="camera_right/image_raw" />
      <remap from="output/image" to="camera_right/optical/image_raw" />
      <remap from="input/camera_info" to="camera_right/camera_info" />
      <remap from="output/camera_info" to="camera_right/optical/camera_info" />
    </node>

    <!--Front Laser-->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_lidar3d"
      args="$(arg sensor_prefix)/front_laser/scan/points@sensor_msgs/PointCloud2[ignition.msgs.PointCloudPacked">
      <remap from="$(arg sensor_prefix)/front_laser/scan/points" to="front_laser/points"/>
    </node>


    <group if="$(arg thermal)">
      <!-- Note camera_info topic generated by ign-gazebo incorrectly removes
           sensor name in topic string -->
      <node
        pkg="ros_ign_bridge"
        type="parameter_bridge"
        name="ros_ign_bridge_thermal_camera"
        args="$(arg sensor_prefix)/camera_info@sensor_msgs/CameraInfo[ignition.msgs.CameraInfo">
        <remap from="$(arg sensor_prefix)/camera_info" to="thermal_camera/camera_info"/>
      </node>
      <node
        pkg="ros_ign_image"
        type="image_bridge"
        name="ros_ign_image_thermal_camera"
        args="$(arg sensor_prefix)/thermal_camera">
        <remap from="$(arg sensor_prefix)/thermal_camera" to="thermal_camera/image_raw"/>
      </node>
      <node
        pkg="subt_ros"
        type="optical_frame_publisher"
        name="optical_frame_publisher_image_thermal_camera">
        <remap from="input/image" to="thermal_camera/image_raw" />
        <remap from="output/image" to="thermal_camera/optical/image_raw" />
        <remap from="input/camera_info" to="thermal_camera/camera_info" />
        <remap from="output/camera_info" to="thermal_camera/optical/camera_info" />
      </node>
    </group>
    

    

    <!-- UGV -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_odom"
      args="/model/$(arg name)/odometry@nav_msgs/Odometry[ignition.msgs.Odometry">
      <remap from="/model/$(arg name)/odometry" to="odom"/>
    </node>

    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_battery_state"
      args="/model/$(arg name)/battery/linear_battery/state@sensor_msgs/BatteryState[ignition.msgs.BatteryState">
      <remap from="/model/$(arg name)/battery/linear_battery/state" to="battery_state"/>
    </node>
    <node
      pkg="subt_ros"
      type="pose_tf_broadcaster"
      name="pose_tf_broadcaster"/>

    <group if="$(arg breadcrumbs)">
      <node
        pkg="ros_ign_bridge"
        type="parameter_bridge"
        name="ros_ign_bridge_breadcrumbs"
        args="/model/$(arg name)/breadcrumb/deploy@std_msgs/Empty]ignition.msgs.Empty">
        <remap from="/model/$(arg name)/breadcrumb/deploy" to="breadcrumb/deploy"/>
      </node>
    </group>
  </group>
</launch>
