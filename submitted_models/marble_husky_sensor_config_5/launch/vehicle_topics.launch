<?xml version="1.0"?>
<launch>
  <env name="IGN_TRANSPORT_TOPIC_STATISTICS" value="1"/>
  <arg name="world_name"/>
  <arg name="name"/>
  <arg name="link_name" value="base_link"/>
  <arg name="sensor_prefix" value="/world/$(arg world_name)/model/$(arg name)/link/$(arg link_name)/sensor"/>
  <!-- <arg name="sensor_head_prefix" value="/world/$(arg world_name)/model/$(arg name)/link/sensor_head_link/sensor"/> -->
  <!-- <arg name="sensor_prefix" value="/world/$(arg world_name)/model/$(arg name)/link/tof_camera_link/sensor"/> -->
  <arg name="breadcrumbs" default="1"/>
  <arg name="thermal" default="0"/>
  <group ns="$(arg name)">
    <!--Create multipe bridges so that it can run in parallel-->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_pose"
      args="/model/$(arg name)/pose@tf2_msgs/TFMessage[ignition.msgs.Pose_V">
      <remap from="/model/$(arg name)/pose" to="pose"/>
    </node>
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_pose_static"
      args="/model/$(arg name)/pose_static@tf2_msgs/TFMessage[ignition.msgs.Pose_V">
      <remap from="/model/$(arg name)/pose_static" to="pose_static"/>
    </node>

    <node
      pkg="subt_ros"
      type="pose_tf_broadcaster"
      name="pose_tf_broadcaster"/>

    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_twist"
      args="/model/$(arg name)/cmd_vel_relay@geometry_msgs/Twist]ignition.msgs.Twist">
      <remap from="/model/$(arg name)/cmd_vel_relay" to="cmd_vel"/>
    </node>

    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_odom"
      args="/model/$(arg name)/odometry@nav_msgs/Odometry[ignition.msgs.Odometry">
      <remap from="/model/$(arg name)/odometry" to="odom"/>
    </node>

    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_battery_state"
      args="/model/$(arg name)/battery/linear_battery/state@sensor_msgs/BatteryState[ignition.msgs.BatteryState">
      <remap from="/model/$(arg name)/battery/linear_battery/state" to="battery_state"/>
    </node>

    <!-- Joint Publisher (Publishes to topic but doesn't control...)-->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_joint_state_publisher"
      args="/world/$(arg world_name)/model/$(arg name)/joint_state@sensor_msgs/JointState[ignition.msgs.Model">
      <remap from="/world/$(arg world_name)/model/$(arg name)/joint_state" to="joint_state"/>-->
    </node>

    <!-- Thermal Camera -->
    <group if="$(arg thermal)">
      <!-- Thermal Camera -->
      <!-- Note camera_info topic generated by ign-gazebo incorrectly removes
           sensor name in topic string -->
      <node
        pkg="ros_ign_bridge"
        type="parameter_bridge"
        name="ros_ign_bridge_thermal_camera"
        args="$(arg sensor_prefix)/camera_info@sensor_msgs/CameraInfo[ignition.msgs.CameraInfo">
        <remap from="$(arg sensor_prefix)/camera_info" to="thermal_camera/camera_info"/>
      </node>
      <node
        pkg="ros_ign_image"
        type="image_bridge"
        name="ros_ign_image_thermal_camera"
        args="$(arg sensor_prefix)/thermal_camera">
        <remap from="$(arg sensor_prefix)/thermal_camera" to="thermal_camera/image_raw"/>
      </node>
      <node
        pkg="subt_ros"
        type="optical_frame_publisher"
        name="optical_frame_publisher_image_thermal_camera">
        <remap from="input/image" to="thermal_camera/image_raw" />
        <remap from="output/image" to="thermal_camera/optical/image_raw" />
        <remap from="input/camera_info" to="thermal_camera/camera_info" />
        <remap from="output/camera_info" to="thermal_camera/optical/camera_info" />
      </node>
    </group>

    <!--Forward Facing Camera -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_camera_front"
      args="$(arg sensor_prefix)/camera_front/camera_info@sensor_msgs/CameraInfo[ignition.msgs.CameraInfo">
      <remap from="$(arg sensor_prefix)/camera_front/camera_info" to="front/camera_info"/>
    </node>
    <node
      pkg="ros_ign_image"
      type="image_bridge"
      name="ros_ign_image_camera_front"
      args="$(arg sensor_prefix)/camera_front/image">
      <remap from="$(arg sensor_prefix)/camera_front/image" to="front/image_raw"/>
    </node>
    <!-- <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_rgbd_front"
      args="$(arg sensor_prefix)/camera_front/points@sensor_msgs/PointCloud2[ignition.msgs.PointCloudPacked">
      <remap from="$(arg sensor_prefix)/camera_front/points" to="front_rgbd_camera/depth/points"/>
    </node>
    <node
      pkg="ros_ign_image"
      type="image_bridge"
      name="ros_ign_image_depth_front"
      args="$(arg sensor_prefix)/camera_front/depth_image">
      <remap from="$(arg sensor_prefix)/camera_front/depth_image" to="front/depth"/>
    </node> -->
    <node
      pkg="subt_ros"
      type="optical_frame_publisher"
      name="optical_frame_publisher_image_front">
      <remap from="input/image" to="front/image_raw" />
      <remap from="output/image" to="front/optical/image_raw" />
      <remap from="input/camera_info" to="front/camera_info" />
      <remap from="output/camera_info" to="front/optical/camera_info" />
    </node>
    <!-- <node
      pkg="subt_ros"
      type="optical_frame_publisher"
      name="optical_frame_publisher_depth_front"
      args="depth">
      <remap from="input/image" to="front/depth" />
      <remap from="output/image" to="front/optical/depth" />
    </node> -->

    <!--Rear Facing Camera -->
    <node
    pkg="ros_ign_bridge"
    type="parameter_bridge"
    name="ros_ign_bridge_camera_back"
    args="$(arg sensor_prefix)/camera_back/camera_info@sensor_msgs/CameraInfo[ignition.msgs.CameraInfo">
    <remap from="$(arg sensor_prefix)/camera_back/camera_info" to="rear/camera_info"/>
    </node>
    <node
    pkg="ros_ign_image"
    type="image_bridge"
    name="ros_ign_image_camera_back"
    args="$(arg sensor_prefix)/camera_back/image">
    <remap from="$(arg sensor_prefix)/camera_back/image" to="rear/image_raw"/>
    </node>
    <node
    pkg="subt_ros"
    type="optical_frame_publisher"
    name="optical_frame_publisher_image_back">
    <remap from="input/image" to="rear/image_raw" />
    <remap from="output/image" to="rear/optical/image_raw" />
    <remap from="input/camera_info" to="rear/camera_info" />
    <remap from="output/camera_info" to="rear/optical/camera_info" />
    </node>

    <!--Left Facing Camera -->
    <node
    pkg="ros_ign_bridge"
    type="parameter_bridge"
    name="ros_ign_bridge_camera_left"
    args="$(arg sensor_prefix)/camera_left/camera_info@sensor_msgs/CameraInfo[ignition.msgs.CameraInfo">
    <remap from="$(arg sensor_prefix)/camera_left/camera_info" to="left/camera_info"/>
    </node>
    <node
    pkg="ros_ign_image"
    type="image_bridge"
    name="ros_ign_image_camera_left"
    args="$(arg sensor_prefix)/camera_left/image">
    <remap from="$(arg sensor_prefix)/camera_left/image" to="left/image_raw"/>
    </node>
    <node
    pkg="subt_ros"
    type="optical_frame_publisher"
    name="optical_frame_publisher_image_left">
    <remap from="input/image" to="left/image_raw" />
    <remap from="output/image" to="left/optical/image_raw" />
    <remap from="input/camera_info" to="left/camera_info" />
    <remap from="output/camera_info" to="left/optical/camera_info" />
    </node>


    <!--Right Facing Camera -->
    <node
    pkg="ros_ign_bridge"
    type="parameter_bridge"
    name="ros_ign_bridge_camera_right"
    args="$(arg sensor_prefix)/camera_right/camera_info@sensor_msgs/CameraInfo[ignition.msgs.CameraInfo">
    <remap from="$(arg sensor_prefix)/camera_right/camera_info" to="right/camera_info"/>
    </node>
    <node
    pkg="ros_ign_image"
    type="image_bridge"
    name="ros_ign_image_camera_right"
    args="$(arg sensor_prefix)/camera_right/image">
    <remap from="$(arg sensor_prefix)/camera_right/image" to="right/image_raw"/>
    </node>
    <node
    pkg="subt_ros"
    type="optical_frame_publisher"
    name="optical_frame_publisher_image_right">
    <remap from="input/image" to="right/image_raw" />
    <remap from="output/image" to="right/optical/image_raw" />
    <remap from="input/camera_info" to="right/camera_info" />
    <remap from="output/camera_info" to="right/optical/camera_info" />
    </node>

    <!-- Left TOF Camera -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_points_tof_left"
      args="$(arg sensor_prefix)/tof_left/depth_image/points@sensor_msgs/PointCloud2[ignition.msgs.PointCloudPacked">
      <remap from="$(arg sensor_prefix)/tof_left/depth_image/points" to="tof_left/points"/>
    </node>
    <node
      pkg="ros_ign_image"
      type="image_bridge"
      name="ros_ign_image_depth_tof_left"
      args="$(arg sensor_prefix)/tof_left/depth_image">
      <remap from="$(arg sensor_prefix)/tof_left/depth_image" to="tof_left/depth"/>
    </node>
    <node pkg="subt_ros"
      type="optical_frame_publisher"
      name="optical_frame_publisher_depth_tof_left"
      args="depth">
      <remap from="input/image" to="tof_left/depth" />
      <remap from="output/image" to="tof_left/optical/depth" />
    </node>


    <!-- Right TOF Camera -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_points_tof_right"
      args="$(arg sensor_prefix)/tof_right/depth_image/points@sensor_msgs/PointCloud2[ignition.msgs.PointCloudPacked">
      <remap from="$(arg sensor_prefix)/tof_right/depth_image/points" to="tof_right/points"/>
    </node>
    <node
      pkg="ros_ign_image"
      type="image_bridge"
      name="ros_ign_image_depth_tof_right"
      args="$(arg sensor_prefix)/tof_right/depth_image">
      <remap from="$(arg sensor_prefix)/tof_right/depth_image" to="tof_right/depth"/>
    </node>
    <node pkg="subt_ros"
      type="optical_frame_publisher"
      name="optical_frame_publisher_depth_tof_right"
      args="depth">
      <remap from="input/image" to="tof_right/depth" />
      <remap from="output/image" to="tof_right/optical/depth" />
    </node>


    <!--OS1-64 3D Horizontal Laser-->
  <node
    pkg="ros_ign_bridge"
    type="parameter_bridge"
    name="ros_ign_bridge_lidar3d_front"
    args="$(arg sensor_prefix)/front_laser/scan/points@sensor_msgs/PointCloud2[ignition.msgs.PointCloudPacked">
    <remap from="$(arg sensor_prefix)/front_laser/scan/points" to="points"/>
  </node>

      <!--OS1-64 3D Vertical Laser-->
  <node
    pkg="ros_ign_bridge"
    type="parameter_bridge"
    name="ros_ign_bridge_lidar3d_vert"
    args="$(arg sensor_prefix)/vert_laser/scan/points@sensor_msgs/PointCloud2[ignition.msgs.PointCloudPacked">
    <remap from="$(arg sensor_prefix)/vert_laser/scan/points" to="vertical_points"/>
  </node>

    <!-- Planar Laser -->
    <node
        pkg="ros_ign_bridge"
        type="parameter_bridge"
        name="ros_ign_bridge_gpu_lidar_planar_laser"
        args="$(arg sensor_prefix)/planar_laser/scan@sensor_msgs/LaserScan[ignition.msgs.LaserScan">
      <remap from="$(arg sensor_prefix)/planar_laser/scan" to="planar_laser_scan"/>
    </node>


    <!--IMU-->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_imu"
      args="$(arg sensor_prefix)/imu_sensor/imu@sensor_msgs/Imu[ignition.msgs.IMU">
      <remap from="$(arg sensor_prefix)/imu_sensor/imu" to="imu/data"/>
    </node>

    <!-- Gas sensor -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_gas"
      args="/model/$(arg name)/gas_detected@std_msgs/Bool[ignition.msgs.Boolean">
      <remap from="/model/$(arg name)/gas_detected" to="gas_detected"/>
    </node>

    <group if="$(arg breadcrumbs)">
      <node
        pkg="ros_ign_bridge"
        type="parameter_bridge"
        name="ros_ign_bridge_breadcrumbs"
        args="/model/$(arg name)/breadcrumb/deploy@std_msgs/Empty]ignition.msgs.Empty">
        <remap from="/model/$(arg name)/breadcrumb/deploy" to="breadcrumb/deploy"/>
      </node>
      <node
        pkg="ros_ign_bridge"
        type="parameter_bridge"
        name="ros_ign_bridge_breadcrumbs_remaining"
        args="/model/$(arg name)/breadcrumb/deploy/remaining@std_msgs/Int32[ignition.msgs.Int32">
        <remap from="/model/$(arg name)/breadcrumb/deploy/remaining" to="breadcrumb/remaining"/>
      </node>
    </group>

    <!-- Mapping Server -->
    <include file="$(find subt_ros)/launch/models_common/mapping_server_relays.launch">
      <arg name="name" value="$(arg name)"/>
    </include>
  </group>
</launch>
