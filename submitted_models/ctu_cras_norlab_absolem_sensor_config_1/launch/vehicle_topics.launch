<?xml version="1.0"?>
<launch>
  <env name="IGN_TRANSPORT_TOPIC_STATISTICS" value="1"/>
  <arg name="world_name"/>
  <arg name="name"/>
  <arg name="link_prefix" value="/world/$(arg world_name)/model/$(arg name)/link"/>
  <arg name="breadcrumbs" default="0"/>
  <arg name="description_print_command" default="" />
  <arg name="revision" default="2014" />
  <arg name="has_cliff_sensors" default="0" />
  <arg name="has_thermal_camera" default="0" />

  <include file="$(dirname)/description.launch" pass_all_args="true">
    <arg name="print_command" value="$(arg description_print_command)" if="$(eval description_print_command != '')" />
  </include>

  <group ns="$(arg name)">

    <!-- Common -->

    <include file="$(find subt_ros)/launch/models_common/all_robots.launch">
      <arg name="name" value="$(arg name)" />
      <arg name="world_name" value="$(arg world_name)" />
    </include>

    <include file="$(find subt_ros)/launch/models_common/all_ugvs.launch">
      <arg name="name" value="$(arg name)" />
      <arg name="world_name" value="$(arg world_name)" />
    </include>

    <!-- Flipper control -->

    <include file="$(dirname)/flipper_control.launch">
      <arg name="robot_name" value="$(arg name)" />
      <arg name="joint_prefix" value="front_left" />
    </include>

    <include file="$(dirname)/flipper_control.launch">
      <arg name="robot_name" value="$(arg name)" />
      <arg name="joint_prefix" value="front_right" />
    </include>

    <include file="$(dirname)/flipper_control.launch">
      <arg name="robot_name" value="$(arg name)" />
      <arg name="joint_prefix" value="rear_left" />
    </include>

    <include file="$(dirname)/flipper_control.launch">
      <arg name="robot_name" value="$(arg name)" />
      <arg name="joint_prefix" value="rear_right" />
    </include>

    <group if="$(eval revision == 2014)">
      <!-- Laser rotation control -->
      <node
        pkg="ros_ign_bridge"
        type="parameter_bridge"
        name="ros_ign_bridge_laser"
        args="/model/$(arg name)/joint/laser_j/cmd_vel@std_msgs/Float64]ignition.msgs.Double">
        <remap from="/model/$(arg name)/joint/laser_j/cmd_vel" to="lidar_gimbal/roll_rate_cmd_double"/>
      </node>

      <!-- Slightly downward looking RGBD camera -->
      <include file="$(find subt_ros)/launch/models_common/rgbd_camera.launch">
        <arg name="node_name_suffix" value="camera" />
        <arg name="gazebo_topic" value="$(arg link_prefix)/base_link/sensor/camera" />
        <arg name="ros_topic" value="front" />
        <arg name="points_ros_topic" value="rgbd_camera/depth/points" />
      </include>

      <!-- Planar Laser -->
      <include file="$(find subt_ros)/launch/models_common/lidar_2d.launch">
        <arg name="node_name_suffix" value="planar_laser" />
        <arg name="gazebo_topic" value="$(arg link_prefix)/laser/sensor/laser/scan" />
      </include>
    </group>

    <group if="$(eval revision == 2021)">
      <!-- 3D lidar Ouster -->
      <include file="$(find subt_ros)/launch/models_common/lidar_3d.launch">
        <arg name="node_name_suffix" value="laser" />
        <arg name="gazebo_topic" value="$(arg link_prefix)/laser/sensor/laser/scan/points" />
      </include>
    </group>

    <group if="$(arg has_cliff_sensors)">
      <include file="$(find subt_ros)/launch/models_common/lidar_3d.launch">
        <arg name="node_name_suffix" value="front_left_cliff_sensor" />
        <arg name="gazebo_topic" value="$(arg link_prefix)/cliff_sensor_0/sensor/laser/scan/points" />
        <arg name="ros_topic" value="front_left_cliff_scan" />
      </include>

      <include file="$(find subt_ros)/launch/models_common/lidar_3d.launch">
        <arg name="node_name_suffix" value="front_right_cliff_sensor" />
        <arg name="gazebo_topic" value="$(arg link_prefix)/cliff_sensor_1/sensor/laser/scan/points" />
        <arg name="ros_topic" value="front_right_cliff_scan" />
      </include>

      <include file="$(find subt_ros)/launch/models_common/lidar_3d.launch">
        <arg name="node_name_suffix" value="rear_right_cliff_sensor" />
        <arg name="gazebo_topic" value="$(arg link_prefix)/cliff_sensor_2/sensor/laser/scan/points" />
        <arg name="ros_topic" value="rear_right_cliff_scan" />
      </include>

      <include file="$(find subt_ros)/launch/models_common/lidar_3d.launch">
        <arg name="node_name_suffix" value="rear_left_cliff_sensor" />
        <arg name="gazebo_topic" value="$(arg link_prefix)/cliff_sensor_3/sensor/laser/scan/points" />
        <arg name="ros_topic" value="rear_left_cliff_scan" />
      </include>
    </group>

    <!-- Omnicamera -->

    <include file="$(find subt_ros)/launch/models_common/rgb_camera.launch">
      <arg name="node_name_suffix" value="omnicam_0" />
      <arg name="gazebo_topic" value="$(arg link_prefix)/base_link/sensor/omnicam_sensor0" />
      <arg name="ros_topic" value="omni/camera_0" />
    </include>

    <include file="$(find subt_ros)/launch/models_common/rgb_camera.launch">
      <arg name="node_name_suffix" value="omnicam_1" />
      <arg name="gazebo_topic" value="$(arg link_prefix)/base_link/sensor/omnicam_sensor1" />
      <arg name="ros_topic" value="omni/camera_1" />
    </include>

    <include file="$(find subt_ros)/launch/models_common/rgb_camera.launch">
      <arg name="node_name_suffix" value="omnicam_2" />
      <arg name="gazebo_topic" value="$(arg link_prefix)/base_link/sensor/omnicam_sensor2" />
      <arg name="ros_topic" value="omni/camera_2" />
    </include>

    <include file="$(find subt_ros)/launch/models_common/rgb_camera.launch">
      <arg name="node_name_suffix" value="omnicam_3" />
      <arg name="gazebo_topic" value="$(arg link_prefix)/base_link/sensor/omnicam_sensor3" />
      <arg name="ros_topic" value="omni/camera_3" />
    </include>

    <include file="$(find subt_ros)/launch/models_common/rgb_camera.launch">
      <arg name="node_name_suffix" value="omnicam_4" />
      <arg name="gazebo_topic" value="$(arg link_prefix)/base_link/sensor/omnicam_sensor4" />
      <arg name="ros_topic" value="omni/camera_4" />
    </include>

    <include file="$(find subt_ros)/launch/models_common/rgb_camera.launch">
      <arg name="node_name_suffix" value="omnicam_5" />
      <arg name="gazebo_topic" value="$(arg link_prefix)/base_link/sensor/omnicam_sensor5" />
      <arg name="ros_topic" value="omni/camera_5" />
    </include>

    <!-- Thermal camera (if used) -->
    <include if="$(arg has_thermal_camera)" file="$(find subt_ros)/launch/models_common/thermal_camera.launch">
      <arg name="node_name_suffix" value="thermal" />
      <arg name="gazebo_topic" value="$(arg link_prefix)/thermocam/sensor" />
      <arg name="ros_topic" value="thermal_camera" />
      <arg name="sensor_name" value="thermal_camera" />
    </include>

    <!--IMU-->
    <include file="$(find subt_ros)/launch/models_common/imu.launch">
      <arg name="gazebo_topic" value="$(arg link_prefix)/base_link/sensor/imu/imu" />
    </include>

    <!-- Breadcrumbs -->
    <include if="$(eval breadcrumbs > 0)" file="$(find subt_ros)/launch/models_common/breadcrumbs.launch">
      <arg name="name" value="$(arg name)" />
    </include>
    
    <!-- Mapping Server -->
    <include file="$(find subt_ros)/launch/models_common/mapping_server_relays.launch">
      <arg name="name" value="$(arg name)"/>
    </include>
  </group>

  <!-- As URDF->SDF conversion "swallows" all fixed joints (and thus static transforms), we need to re-create them from the URDF  -->
  <!-- Due to an internal limitation of robot_state_publisher, it has to be created in the global namespace. -->
  <node name="$(anon robot_state_publisher)" pkg="robot_state_publisher" type="robot_state_publisher">
    <remap from="/tf" to="/nonexistent" /> <!-- published by ign_ros bridge -->
    <remap from="robot_description" to="/$(arg name)/robot_description" />
  </node>
</launch>
